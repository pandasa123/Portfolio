// We can import bulma into the project using Sass.
@import "../node_modules/bulma/bulma";
// TODO: Import essentials only! Reduced bundle size

$pastel-info: rgba(36, 177, 209, .2);

body {
  font-family: "Proxima Nova", system-ui, sans-serif;
  letter-spacing: 1px;
}

// TODO: Animate underline

.shadow {
  &.is-info {
    -moz-box-shadow: inset 0 -2px 0 $info;
    -webkit-box-shadow: inset 0 -2px 0 $info;
    box-shadow: inset 0 -2px 0 $info;
  }

  &.is-danger {
    -moz-box-shadow: inset 0 -2px 0 $danger;
    -webkit-box-shadow: inset 0 -2px 0 $danger;
    box-shadow: inset 0 -2px 0 $danger;
  }

  &.is-success {
    -moz-box-shadow: inset 0 -2px 0 $success;
    -webkit-box-shadow: inset 0 -2px 0 $success;
    box-shadow: inset 0 -2px 0 $success;
  }

  &.is-warning {
    -moz-box-shadow: inset 0 -2px 0 $warning;
    -webkit-box-shadow: inset 0 -2px 0 $warning;
    box-shadow: inset 0 -2px 0 $warning;
  }

  &.pastel-blue {
    -moz-box-shadow: inset 0 -2px 0 $pastel-info;
    -webkit-box-shadow: inset 0 -2px 0 $pastel-info;
    box-shadow: inset 0 -2px 0 $pastel-info;
  }
}

.text-right-until-mobile {
  @media only screen and (min-width: 769px) {
    text-align: right;
  }
}

.dark-footer {
  background-color: $dark !important;
  color: white;

  strong {
    color: white;
  }

  .icon {
    color: $info;
  }

  .icon:hover {
    color: white;
  }
}

.iconSet {
  position: relative;
  top: 0.2rem;
  display: inline-block;
}

.emoji {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  position: relative;
  top: 5px;
}

.waving-hand {
  &.animated {
    animation-duration: 1s;
    animation-fill-mode: both;
  }

  &.wave {
    animation-name: wave;
  }

  @keyframes wave {
    from {
      transform: none;
    }
    15% {
      transform: translate3d(-20%, 0, 0) rotate3d(0, 0, 1, -10deg);
    }
    30% {
      transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 7deg);
    }
    45% {
      transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -10deg);
    }
    60% {
      transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 5deg);
    }
    75% {
      transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -2deg);
    }
    to {
      transform: none;
    }
  }
}
