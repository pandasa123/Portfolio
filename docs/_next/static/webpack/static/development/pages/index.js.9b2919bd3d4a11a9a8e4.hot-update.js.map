{"version":3,"file":"static/webpack/static/development/pages/index.js.9b2919bd3d4a11a9a8e4.hot-update.js","sources":["webpack:///./components/NightLight.js","webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport WeatherSunnyIcon from 'mdi-react/WeatherSunnyIcon'\nimport WeatherNightIcon from 'mdi-react/WeatherNightIcon'\n\n// TODO: Fix vertical lineup.\n// TODO: Fix jump to left on resize\n// TODO: Add functional dark mode using is-dark class\n\n\nconst NightLight = props => {\n  let theme = props.theme\n  let hour = new Date().getHours()\n  if (hour > 19 || hour < 8) {\n    theme = true\n  }\n\n  const setToggle = e => {\n    props.toggle(e.target.checked)\n  }\n\n  return (\n    <div className={props.theme ? 'columns is-mobile is-dark has-text-white' : 'columns is-mobile'}>\n      <div className=\"has-text-right column\">\n        <span className=\"icon\" style={{position: 'relative', top: '6px', right: '7px'}}>\n          <WeatherSunnyIcon/>\n        </span>\n        <input id=\"switchRoundedSuccess\" type=\"checkbox\" name=\"switchRoundedSuccess\"\n               className=\"switch is-rounded is-success\" onClick={setToggle}/>\n        <label htmlFor=\"switchRoundedSuccess\"/>\n        <span className=\"icon\" style={{position: 'relative', top: '6px'}}>\n          <WeatherNightIcon/>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default NightLight\n","import React from 'react'\nimport '../styles/bulma.scss'\n\nimport Hello from '../components/Hello'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Background from '../components/Background'\nimport Skills from '../components/Skills'\nimport Experience from '../components/Experience'\nimport ViewportHeader from '../components/ViewportHeader'\n\n// TODO: Add favicon\n\nlet theme = false\n\nconst toggleTheme = (newTheme) => {\n  theme = newTheme\n  alert(theme)\n}\n\nclass Index extends React.Component {\n  componentDidMount() {\n    document.querySelector('html').style.backgroundColor = (theme === true) ? 'hsl(0, 0%, 21%)' : 'white'\n  }\n\n  render() {\n    return (\n      <div>\n        <ViewportHeader/>\n        <Header toggle={toggleTheme} theme={theme}/>\n        <Hello theme={theme}/>\n        <Background theme={theme}/>\n        <Skills theme={theme}/>\n        <Experience theme={theme}/>\n        <Footer theme={theme}/>\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjBA;AACA;AAmBA;;;;A","sourceRoot":""}